#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_DIRS 10
#define MAX_FILES 10
#define MAX_NAME_LENGTH 30

typedef struct {
    char dname[MAX_NAME_LENGTH];
    char fname[MAX_FILES][MAX_NAME_LENGTH];
    int fcnt;
} Directory;

Directory dir[MAX_DIRS];
int dcnt = 0;

int main() {
    int ch, i, j;
    char path[MAX_NAME_LENGTH];
    
    while (1) {
        printf("\n\n1. Create Directory\t2. Create File\t3. Delete File");
        printf("\n4. Search File\t\t5. Display\t6. Exit\nEnter your choice -- ");
        scanf("%d", &ch);

        switch (ch) {
            case 1:
                if (dcnt < MAX_DIRS) {
                    printf("\nEnter name of the directory -- ");
                    scanf("%s", dir[dcnt].dname);
                    dir[dcnt].fcnt = 0;
                    dcnt++;
                    printf("Directory created.\n");
                } else {
                    printf("Maximum number of directories reached.\n");
                }
                break;

            case 2:
                printf("\nEnter the full path (directory/file) -- ");
                scanf("%s", path);

                {
                    char *dirName = strtok(path, "/");
                    char *fileName = strtok(NULL, "/");

                    int dirIndex = -1;
                    for (i = 0; i < dcnt; i++) {
                        if (strcmp(dirName, dir[i].dname) == 0) {
                            dirIndex = i;
                            break;
                        }
                    }

                    if (dirIndex != -1) {
                        if (fileName) {
                            if (dir[dirIndex].fcnt < MAX_FILES) {
                                strcpy(dir[dirIndex].fname[dir[dirIndex].fcnt], fileName);
                                dir[dirIndex].fcnt++;
                                printf("File created in directory %s.\n", dir[dirIndex].dname);
                            } else {
                                printf("Maximum number of files in directory %s reached.\n", dir[dirIndex].dname);
                            }
                        } else {
                            printf("Invalid path. No file name specified.\n");
                        }
                    } else {
                        printf("Directory %s not found.\n", dirName);
                    }
                }
                break;

            case 3:
                printf("\nEnter the full path (directory/file) -- ");
                scanf("%s", path);

                {
                    char *dirName = strtok(path, "/");
                    char *fileName = strtok(NULL, "/");

                    int dirIndex = -1;
                    for (i = 0; i < dcnt; i++) {
                        if (strcmp(dirName, dir[i].dname) == 0) {
                            dirIndex = i;
                            break;
                        }
                    }

                    if (dirIndex != -1) {
                        if (fileName) {
                            int fileIndex = -1;
                            for (j = 0; j < dir[dirIndex].fcnt; j++) {
                                if (strcmp(fileName, dir[dirIndex].fname[j]) == 0) {
                                    fileIndex = j;
                                    break;
                                }
                            }

                            if (fileIndex != -1) {
                                printf("File %s is deleted.\n", fileName);
                                dir[dirIndex].fcnt--;
                                strcpy(dir[dirIndex].fname[fileIndex], dir[dirIndex].fname[dir[dirIndex].fcnt]);
                            } else {
                                printf("File %s not found in directory %s.\n", fileName, dir[dirIndex].dname);
                            }
                        } else {
                            printf("Invalid path. No file name specified.\n");
                        }
                    } else {
                        printf("Directory %s not found.\n", dirName);
                    }
                }
                break;

            case 4:
                printf("\nEnter the full path (directory/file) -- ");
                scanf("%s", path);

                {
                    char *dirName = strtok(path, "/");
                    char *fileName = strtok(NULL, "/");

                    int dirIndex = -1;
                    for (i = 0; i < dcnt; i++) {
                        if (strcmp(dirName, dir[i].dname) == 0) {
                            dirIndex = i;
                            break;
                        }
                    }

                    if (dirIndex != -1) {
                        if (fileName) {
                            int fileIndex = -1;
                            for (j = 0; j < dir[dirIndex].fcnt; j++) {
                                if (strcmp(fileName, dir[dirIndex].fname[j]) == 0) {
                                    fileIndex = j;
                                    break;
                                }
                            }

                            if (fileIndex != -1) {
                                printf("File %s found in directory %s.\n", fileName, dir[dirIndex].dname);
                            } else {
                                printf("File %s not found in directory %s.\n", fileName, dir[dirIndex].dname);
                            }
                        } else {
                            printf("Invalid path. No file name specified.\n");
                        }
                    } else {
                        printf("Directory %s not found.\n", dirName);
                    }
                }
                break;

            case 5:
                if (dcnt == 0) {
                    printf("No directories available.\n");
                } else {
                    for (i = 0; i < dcnt; i++) {
                        printf("\nDirectory: %s\n", dir[i].dname);
                        if (dir[i].fcnt == 0) {
                            printf("No files in this directory.\n");
                        } else {
                            printf("Files:\n");
                            for (j = 0; j < dir[i].fcnt; j++) {
                                printf("\t%s\n", dir[i].fname[j]);
                            }
                        }
                    }
                }
                break;

            case 6:
                exit(0);

            default:
                printf("Invalid choice, please try again.\n");
        }
    }

    return 0;
}
